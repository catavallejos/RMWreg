// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// lambdaUpdate
arma::vec lambdaUpdate(String const& mixing, arma::vec const& Time, arma::vec const& Event, arma::mat const& X, arma::vec const& beta, double const& gam, double const& theta, int const& n);
RcppExport SEXP RMWreg_lambdaUpdate(SEXP mixingSEXP, SEXP TimeSEXP, SEXP EventSEXP, SEXP XSEXP, SEXP betaSEXP, SEXP gamSEXP, SEXP thetaSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< String const& >::type mixing(mixingSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type Event(EventSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double const& >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double const& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int const& >::type n(nSEXP);
    __result = Rcpp::wrap(lambdaUpdate(mixing, Time, Event, X, beta, gam, theta, n));
    return __result;
END_RCPP
}
// HiddenRMWreg_MCMC
Rcpp::List HiddenRMWreg_MCMC(int N, int thin, int burn, NumericVector Time, NumericVector Event, NumericMatrix X, String mixing, double const& hyp1_gam, double const& hyp2_gam, String const& PriorCV, double const& hyp_theta, NumericVector beta0, double gam0, double theta0, int Adapt, double ar, int StoreAdapt, int EndAdapt, NumericVector LSbeta0, double LSgam0, double LStheta0, int FixBetaJ, int FixGam, int FixTheta, int PrintProgress, int lambdaPeriod);
RcppExport SEXP RMWreg_HiddenRMWreg_MCMC(SEXP NSEXP, SEXP thinSEXP, SEXP burnSEXP, SEXP TimeSEXP, SEXP EventSEXP, SEXP XSEXP, SEXP mixingSEXP, SEXP hyp1_gamSEXP, SEXP hyp2_gamSEXP, SEXP PriorCVSEXP, SEXP hyp_thetaSEXP, SEXP beta0SEXP, SEXP gam0SEXP, SEXP theta0SEXP, SEXP AdaptSEXP, SEXP arSEXP, SEXP StoreAdaptSEXP, SEXP EndAdaptSEXP, SEXP LSbeta0SEXP, SEXP LSgam0SEXP, SEXP LStheta0SEXP, SEXP FixBetaJSEXP, SEXP FixGamSEXP, SEXP FixThetaSEXP, SEXP PrintProgressSEXP, SEXP lambdaPeriodSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Event(EventSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< String >::type mixing(mixingSEXP);
    Rcpp::traits::input_parameter< double const& >::type hyp1_gam(hyp1_gamSEXP);
    Rcpp::traits::input_parameter< double const& >::type hyp2_gam(hyp2_gamSEXP);
    Rcpp::traits::input_parameter< String const& >::type PriorCV(PriorCVSEXP);
    Rcpp::traits::input_parameter< double const& >::type hyp_theta(hyp_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< double >::type gam0(gam0SEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< int >::type Adapt(AdaptSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< int >::type StoreAdapt(StoreAdaptSEXP);
    Rcpp::traits::input_parameter< int >::type EndAdapt(EndAdaptSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LSbeta0(LSbeta0SEXP);
    Rcpp::traits::input_parameter< double >::type LSgam0(LSgam0SEXP);
    Rcpp::traits::input_parameter< double >::type LStheta0(LStheta0SEXP);
    Rcpp::traits::input_parameter< int >::type FixBetaJ(FixBetaJSEXP);
    Rcpp::traits::input_parameter< int >::type FixGam(FixGamSEXP);
    Rcpp::traits::input_parameter< int >::type FixTheta(FixThetaSEXP);
    Rcpp::traits::input_parameter< int >::type PrintProgress(PrintProgressSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaPeriod(lambdaPeriodSEXP);
    __result = Rcpp::wrap(HiddenRMWreg_MCMC(N, thin, burn, Time, Event, X, mixing, hyp1_gam, hyp2_gam, PriorCV, hyp_theta, beta0, gam0, theta0, Adapt, ar, StoreAdapt, EndAdapt, LSbeta0, LSgam0, LStheta0, FixBetaJ, FixGam, FixTheta, PrintProgress, lambdaPeriod));
    return __result;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP RMWreg_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcpp_hello());
    return __result;
END_RCPP
}
